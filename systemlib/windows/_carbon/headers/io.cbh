import std::system;
extern(C) func GetCommandLineA():&pure uint8;
extern(C) func GetStdHandle(:int):&opaque;
extern(C) func WriteFile(:&opaque, :&pure uint8, :int, :&int, :&opaque):{};
extern(C) func ReadFile(:&opaque, :&opaque, :int, :&int, :&opaque):bool;
extern(C) func CreateFileA(:&pure uint8, :int, :int, :&SECURITY_ATTRIBUTES, :int, :int, :&opaque):&opaque;
extern(C) func SetFilePointer(:&opaque, :int, :&int, :int):int;
extern(C) func CloseHandle(:&opaque):int;
extern(C) func GetFileInformationByHandle(:&opaque, :&BY_HANDLE_FILE_INFORMATION):bool;
extern(C) func GetLastError():int;
extern(C) func CopyFileA(:&pure uint8, :&pure uint8, :bool):bool;
extern(C) func DeleteFileA(:&pure uint8):bool;
extern(C) func MoveFileA(:&pure uint8, :&pure uint8):bool;
extern(C) func CreateDirectoryA(:&pure uint8, :&SECURITY_ATTRIBUTES):bool;
extern(C) func RemoveDirectoryA(:&pure uint8):bool;
extern func write(:FileHandle, :[]pure uint8):isize;
extern func read(:FileHandle, :[]uint8):isize;
extern func open(:[]pure uint8, :OpenFlags, :int):{FileHandle, syserror};
extern func seek(:FileHandle, :int64, :Whence):{};
extern func stat(:FileHandle, :&Stat):syserror;
extern func stat(:[]pure uint8, :&Stat):syserror;
extern func close(:FileHandle):syserror;
extern func stdin():&opaque;
extern func stdout():&opaque;
extern func stderr():&opaque;
extern func unlink(:[]pure uint8):syserror;
extern func remove(:[]pure uint8):syserror;
extern func rename(:[]pure uint8, :[]pure uint8):syserror;
extern func copy(:[]pure uint8, :[]pure uint8):syserror;
extern func mkdir(:[]pure uint8):syserror;
