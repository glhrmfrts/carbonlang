import std::system

/*
import std::rawstring


extern(C) func carbon_main(): int {
    let cmd_line_args_buf = [1][]pure uint8{ "" }
    let cmdline = (GetCommandLineA())
    let args = [][]pure uint8{ &cmd_line_args_buf[0], 1 }
    args[0] = []pure uint8{ (cast(&uint8)(cast(&opaque)(cmdline))), cmdline->length() }

    import main
    return main(args)
}*/


const N = 10

func mmap(addr: &opaque, n: usize, f1: int, f2: int, f3: int, f4: int): &opaque {
    return nil
}

func asmfunc() {
    let invalidMapValue = cast(&opaque)(cast(uintptr)-1)

    let ptr = mmap(nil, N*sizeof(int), 2 | 3, 12 | 24, 0, 0)
    if (ptr == invalidMapValue) {
        write(stdout(), "Invalid mmap\n")
    }
    else {
        write(stdout(), "Success mmap\n")
    }

    let arr = []int{ cast(&int)ptr, N }
    arr[0] = 0
    arr[1] = 1

    for (i in 2,N) {
        arr[i] = arr[i - 1] + arr[i - 2]
    }
}