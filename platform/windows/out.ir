string #0: "Hello";
func GetCommandLineA -> nullableptr__Tpure__Tuint8
endf

func GetStdHandle -> int
endf

func WriteFile -> void
endf

func ReadFile -> bool
endf

func cb__Nstd__Nplatform__Nwrite__Aint__Aptr__Tpure__Tuint8__Ausize -> isize
    arg #0 handle: int;
    arg #1 ptr: ptr__Tpure__Tuint8;
    arg #2 len: usize;
    local #0 written: int;
    ir_load L0 0;
    ir_load_addr L0;
    ir_call WriteFile A0 A1 A2 ST 0;
    ir_return L0;
endf

func cb__Nstd__Nplatform__Nread__Aint__Aptr__Tuint8__Ausize -> isize
    arg #0 handle: int;
    arg #1 ptr: ptr__Tuint8;
    arg #2 len: usize;
    local #0 bytes_read: int;
    ir_load L0 0;
    ir_cast A2;
    ir_load_addr L0;
    ir_call ReadFile A0 A1 ST ST 0;
    ir_noop ST;
    ir_return L0;
endf

func cb__Nstd__Nplatform__Nget_stdin_fd -> int
    ir_call GetStdHandle -10;
    ir_return ST;
endf

func cb__Nstd__Nplatform__Nget_stdout_fd -> int
    ir_call GetStdHandle -11;
    ir_return ST;
endf

func cb__Nstd__Nplatform__Nget_stderr_fd -> int
    ir_call GetStdHandle -12;
    ir_return ST;
endf

func HeapAlloc -> rawptr
endf

func HeapFree -> bool
endf

func GetProcessHeap -> int
endf

func cb__Nstd__Nplatform__Nalloc__Ausize -> rawptr
    arg #0 size: usize;
    ir_call GetProcessHeap;
    ir_call HeapAlloc ST 0 A0;
    ir_return ST;
endf

func cb__Nstd__Nplatform__Nfree__Arawptr -> void
    arg #0 p: rawptr;
    ir_call GetProcessHeap;
    ir_call HeapFree ST 0 A0;
    ir_noop ST;
endf

func QueryPerformanceFrequency -> bool
endf

func QueryPerformanceCounter -> bool
endf

func test_main -> int
    local #0 str: slice__Tpure__Tuint8;
    local #1 m: rawptr;
    local #2 ptr: ptr__Tuint8;
    local #3 $foriter: tuple__Tint__Tusize;
    local #4 i: int;
    local #5 i: int;
    ir_load_addr STR0;
    ir_load [L0 . 0] ST;
    ir_load [L0 . 1] 5;
    ir_call cb__Nstd__Nplatform__Nget_stdout_fd;
    ir_call cb__Nstd__Nplatform__Nwrite__Aint__Aptr__Tpure__Tuint8__Ausize ST [L0 . 0] [L0 . 1];
    ir_noop ST;
    ir_add [L0 . 1] 1;
    ir_call cb__Nstd__Nplatform__Nalloc__Ausize ST;
    ir_load L1 ST;
    ir_load L2 L1;
    ir_load [L3 . 0] 0;
    ir_load [L3 . 1] [L0 . 1];
    ir_load L5 [L3 . 0];
    ir_make_label test_main$f380$cond;
    ir_cast L5;
    ir_jmp_gte ST [L3 . 1] test_main$f380$end;
    ir_make_label test_main$f380$body;
    ir_deref L2;
    ir_index ST L5;
    ir_deref [L0 . 0];
    ir_index ST L5;
    ir_load ST ST;
    ir_add L5 1;
    ir_load L5 ST;
    ir_jmp test_main$f380$cond;
    ir_make_label test_main$f380$end;
    ir_call cb__Nstd__Nplatform__Nget_stdout_fd;
    ir_call cb__Nstd__Nplatform__Nwrite__Aint__Aptr__Tpure__Tuint8__Ausize ST L2 [L0 . 1];
    ir_noop ST;
    ir_call cb__Nstd__Nplatform__Nfree__Arawptr L2;
    ir_return 0;
endf

