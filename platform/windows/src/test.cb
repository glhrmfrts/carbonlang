import std::platform
import io
import memory

func test_file_write() {
    let handle = open("file.txt", O_CREATE | O_WRITE)
    write(handle.first, "HELLO_WORLD")
    close(handle.first)

    handle = open("file.txt", O_CREATE | O_READ)
    let bufdata = [12]uint8{}
    let data = []uint8{&bufdata[0], sizeof(bufdata)}
    read(handle.first, data)
    write(get_stdout_fd(), data)

    return true
}

extern(C) func test_main(): int {
    // TODO: write(get_stdout_fd(), "Hello".ptr, 5)
    // TODO: let a, b = fn()

    let handle = open("file.txt", O_READ)
    let bufdata = [12]uint8{}
    let data = []uint8{&bufdata[0], sizeof(bufdata)}
    read(handle.first, data)
    write(get_stdout_fd(), data)
    write(get_stdout_fd(), "\n")
    close(handle.first)

    let str = "QWEQWEQWE"
    write(get_stdout_fd(), str)

    let m = alloc(str.len + 1)
    let ptr = nullcast(cast(*uint8)m.ptr)

    for (i in 0,str.len) {
        ptr[i] = str[i]
    }
    write(get_stdout_fd(), []pure uint8{ptr, str.len})

    let or = open("file.txt", O_APPEND)
    let file = or.first
    write(file, []pure uint8{ptr, str.len})
    close(file)

    free(m)

    return 0
}