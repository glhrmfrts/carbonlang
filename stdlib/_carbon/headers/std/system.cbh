extern func alloc(:usize):{&opaque, error};
extern func alloc(:usize, :&opaque):{&opaque, error};
extern func free(:&opaque, :usize):{};
extern func write(:FileHandle, :[]pure uint8):isize;
extern func read(:FileHandle, :[]uint8):isize;
extern func open(:[]pure uint8, :OpenFlags, :int):{FileHandle, error};
extern func stdout():FileHandle;
extern func stderr():FileHandle;
extern func stdin():FileHandle;
extern func fdflags(:FileHandle):int;
extern func close(:FileHandle):error;
extern func seek(:FileHandle, :int64, :Whence):{};
extern func stat(:[]pure uint8, :&Stat):error;
extern func stat(:FileHandle, :&Stat):error;
extern func unlink(:[]pure uint8):error;
extern func remove(:[]pure uint8):error;
extern func rename(:[]pure uint8, :[]pure uint8):error;
extern func copy(:[]pure uint8, :[]pure uint8):error;
extern func mkdir(:[]pure uint8):error;
extern func exit(:int):{};
extern func process(:[]pure uint8, :[]pure uint8):error;
extern func makeThread(:{&opaque} -> {}, :&opaque):{ThreadHandle, error};
extern func join(:ThreadHandle):error;
extern func threadId():int;
extern func cpuCount():int;
extern func makeMutex():{MutexHandle, error};
extern func lock(:MutexHandle):error;
extern func unlock(:MutexHandle):error;
extern func destroy(:MutexHandle):{};
extern func sleepMs(:uint64):{};
extern func intToString(:int, :int, :[]uint8):int;
extern func writeInt(:FileHandle, :int):{};
