module aoc

  code_unit ./src/aoc/aoc01.cb
    decl_list
      import_decl
        identifier std::system
        identifier sys
      import_decl
        identifier std::mem
        identifier mem
      func_decl
        identifier print
        arg_list
          var_decl
            arg_list
              identifier s
            arg_list end
          .type
            type_resolver &[]pure uint8
        arg_list end
        compound_stmt
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT10
                arg_list end
              .value
                unary @
                  identifier s
            call
              identifier sys::write
              arg_list
                call
                  identifier sys::stdout
                  arg_list
                  arg_list end
                unary &
                  identifier $cbT10
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier print
        arg_list
          var_decl
            arg_list
              identifier i
            arg_list end
          .type
            type_expr
              identifier int
        arg_list end
        compound_stmt
          stmt_list
            call
              identifier sys::writeInt
              arg_list
                call
                  identifier sys::stdout
                  arg_list
                  arg_list end
                identifier i
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier print
        arg_list
          var_decl
            arg_list
              identifier i
            arg_list end
          .type
            type_expr
              identifier usize
        arg_list end
        compound_stmt
          stmt_list
            call
              identifier print
              arg_list
                cast_expr
                  type_expr
                    identifier int
                  identifier i
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier println
        arg_list
          var_decl
            arg_list
              identifier s
            arg_list end
          .type
            type_resolver &[]pure uint8
        arg_list end
        compound_stmt
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT11
                arg_list end
              .value
                unary @
                  identifier s
            call
              identifier sys::write
              arg_list
                call
                  identifier sys::stdout
                  arg_list
                  arg_list end
                unary &
                  identifier $cbT11
              arg_list end
          stmt_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT12
                arg_list end
              .value
                init_expr
                  type_expr
                    type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT12
                      identifier ptr
                    string_literal "
"
                  binary =
                    field_expr
                      identifier $cbT12
                      identifier len
                    cast_expr
                      type_resolver usize
                      int_literal 1
                init_expr end
            call
              identifier sys::write
              arg_list
                call
                  identifier sys::stdout
                  arg_list
                  arg_list end
                unary &
                  identifier $cbT12
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier println
        arg_list
          var_decl
            arg_list
              identifier i
            arg_list end
          .type
            type_expr
              identifier int
        arg_list end
        compound_stmt
          stmt_list
            call
              identifier sys::writeInt
              arg_list
                call
                  identifier sys::stdout
                  arg_list
                  arg_list end
                identifier i
              arg_list end
          stmt_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT13
                arg_list end
              .value
                init_expr
                  type_expr
                    type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT13
                      identifier ptr
                    string_literal "
"
                  binary =
                    field_expr
                      identifier $cbT13
                      identifier len
                    cast_expr
                      type_resolver usize
                      int_literal 1
                init_expr end
            call
              identifier sys::write
              arg_list
                call
                  identifier sys::stdout
                  arg_list
                  arg_list end
                unary &
                  identifier $cbT13
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier println
        arg_list
          var_decl
            arg_list
              identifier i
            arg_list end
          .type
            type_expr
              identifier usize
        arg_list end
        compound_stmt
          stmt_list
            call
              identifier println
              arg_list
                cast_expr
                  type_expr
                    identifier int
                  identifier i
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier allocString
        arg_list
          var_decl
            arg_list
              identifier $cb_agg_ret
            arg_list end
          .type
            type_resolver &[]uint8
          var_decl
            arg_list
              identifier sz
            arg_list end
          .type
            type_expr
              identifier usize
        arg_list end
        type_resolver &[]uint8
        compound_stmt
          decl_list
            .pre_nodes
              call
                identifier mem::alloc
                arg_list
                  unary &
                    identifier $cbT4
                  binary +
                    identifier sz
                    cast_expr
                      type_resolver usize
                      int_literal 1
                arg_list end
            var_decl
              arg_list
                identifier $cbT4
              arg_list end
            var_decl
              arg_list
                identifier data
              arg_list end
            .type
              type_expr
                type_resolver &opaque
            .value
              field_expr
                identifier $cbT4
                identifier first
            var_decl
              arg_list
                identifier err
              arg_list end
            .type
              type_expr
                type_resolver error
            .value
              field_expr
                identifier $cbT4
                identifier second

          decl_list end
          stmt_list
            call
              identifier mem::memset
              arg_list
                identifier data
                int_literal 0
                binary +
                  identifier sz
                  cast_expr
                    type_resolver usize
                    int_literal 1
              arg_list end
          stmt_list end
          stmt_list
            .pre_nodes
              binary =
                unary @
                  identifier $cb_agg_ret
                init_expr
                  type_expr
                    slice_type [ ] 
                      type_expr
                        identifier uint8
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier ptr
                    cast_expr
                      type_expr
                        type_qualifier ptr
                          identifier uint8
                      identifier data
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier len
                    identifier sz
                init_expr end
            return_stmt
              identifier $cb_agg_ret
          stmt_list end
        compound_stmt end
      func_decl
        identifier allocIntSlice
        arg_list
          var_decl
            arg_list
              identifier $cb_agg_ret
            arg_list end
          .type
            type_resolver &{[]int, error}
          var_decl
            arg_list
              identifier n
            arg_list end
          .type
            type_expr
              identifier usize
        arg_list end
        type_resolver &{[]int, error}
        compound_stmt
          decl_list
            .pre_nodes
              call
                identifier mem::alloc
                arg_list
                  unary &
                    identifier $cbT5
                  binary *
                    identifier n
                    int_literal 4
                arg_list end
            var_decl
              arg_list
                identifier $cbT5
              arg_list end
            var_decl
              arg_list
                identifier buf
              arg_list end
            .type
              type_expr
                type_resolver &opaque
            .value
              field_expr
                identifier $cbT5
                identifier first
            var_decl
              arg_list
                identifier err
              arg_list end
            .type
              type_expr
                type_resolver error
            .value
              field_expr
                identifier $cbT5
                identifier second

          decl_list end
          stmt_list
            if{binary  
                identifier err
                int_literal 0 compound_stmt
                stmt_list
                  .pre_nodes
                    binary =
                      unary @
                        identifier $cb_agg_ret
                      init_expr
                        binary =
                          field_expr
                            unary @
                              identifier $cb_agg_ret
                            identifier first
                          init_expr
                            type_expr
                              slice_type [ ] 
                                type_expr
                                  identifier int
                            binary =
                              field_expr
                                field_expr
                                  unary @
                                    identifier $cb_agg_ret
                                  identifier first
                                identifier ptr
                              nil_literal
                            binary =
                              field_expr
                                field_expr
                                  unary @
                                    identifier $cb_agg_ret
                                  identifier first
                                identifier len
                              cast_expr
                                type_resolver usize
                                int_literal 0
                          init_expr end
                        binary =
                          field_expr
                            unary @
                              identifier $cb_agg_ret
                            identifier second
                          identifier err
                      init_expr end
                  return_stmt
                    identifier $cb_agg_ret
                stmt_list end
              compound_stmt end}
          stmt_list end
          decl_list
            var_decl
              arg_list
                identifier slice
              arg_list end
            .value
              init_expr
                type_expr
                  slice_type [ ] 
                    type_expr
                      identifier int
                binary =
                  field_expr
                    identifier slice
                    identifier ptr
                  cast_expr
                    type_expr
                      type_qualifier ptr
                        identifier int
                    identifier buf
                binary =
                  field_expr
                    identifier slice
                    identifier len
                  identifier n
              init_expr end
          decl_list end
          stmt_list
            .pre_nodes
              binary =
                unary @
                  identifier $cb_agg_ret
                init_expr
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier first
                    identifier slice
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier second
                    int_literal 0
                init_expr end
            return_stmt
              identifier $cb_agg_ret
          stmt_list end
        compound_stmt end
      func_decl
        identifier free
        arg_list
          var_decl
            arg_list
              identifier s
            arg_list end
        arg_list end
        compound_stmt
          stmt_list
            call
              identifier mem::free
              arg_list
                field_expr
                  identifier s
                  identifier ptr
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier countLines
        arg_list
          var_decl
            arg_list
              identifier s
            arg_list end
          .type
            type_resolver &[]pure uint8
        arg_list end
        type_expr
          identifier usize
        compound_stmt
          decl_list
            var_decl
              arg_list
                identifier count
              arg_list end
            .type
              type_expr
                identifier usize
            .value
              int_literal 0
          decl_list end
          stmt_list
                          arg_list
                identifier i
              arg_list end              compound_stmt
                stmt_list
                  if{binary  
                      cast_expr
                        type_resolver char
                        field_expr
                            unary @
                              identifier s
                            identifier ptr[identifier i]
                       compound_stmt
                      stmt_list
                        binary =
                          identifier count
                          binary +
                            identifier count
                            cast_expr
                              type_resolver usize
                              int_literal 1
                      stmt_list end
                    compound_stmt end}
                stmt_list end
              compound_stmt end
          stmt_list end
          stmt_list
            return_stmt
              identifier count
          stmt_list end
        compound_stmt end
      func_decl
        identifier isNumeric
        arg_list
          var_decl
            arg_list
              identifier c
            arg_list end
          .type
            type_expr
              identifier uint8
        arg_list end
        type_expr
          identifier bool
        compound_stmt
          stmt_list
            return_stmt
              .pre_nodes
                if{binary  
                    binary  
                      cast_expr
                        type_resolver char
                        identifier c
                      
                    binary  
                      cast_expr
                        type_resolver char
                        identifier c
                       binary =
                    identifier $cbT14
                    bool_literal true else binary =
                    identifier $cbT14
                    bool_literal false}
              identifier $cbT14
          stmt_list end
        compound_stmt end
      func_decl
        identifier trimNonNumeric
        arg_list
          var_decl
            arg_list
              identifier $cb_agg_ret
            arg_list end
          .type
            type_resolver &[]pure uint8
          var_decl
            arg_list
              identifier s
            arg_list end
          .type
            type_resolver &[]pure uint8
        arg_list end
        type_resolver &[]pure uint8
        compound_stmt
          decl_list
            var_decl
              arg_list
                identifier count
              arg_list end
            .type
              type_expr
                identifier usize
            .value
              int_literal 0
          decl_list end
          stmt_list
                          arg_list
                identifier i
              arg_list end              compound_stmt
                stmt_list
                  if{unary !
                      binary  
                        call
                          identifier isNumeric
                          arg_list
                            cast_expr
                              type_resolver uint8
                              field_expr
                                  unary @
                                    identifier s
                                  identifier ptr[identifier i]
                          arg_list end
                        bool_literal false compound_stmt
                      stmt_list
                        binary =
                          identifier count
                          binary +
                            identifier count
                            cast_expr
                              type_resolver usize
                              int_literal 1
                      stmt_list end
                    compound_stmt end else compound_stmt
                      stmt_list
                        
                      stmt_list end
                    compound_stmt end}
                stmt_list end
              compound_stmt end
          stmt_list end
          stmt_list
            .pre_nodes
              binary =
                unary @
                  identifier $cb_agg_ret
                init_expr
                  type_expr
                    slice_type [ ] 
                      type_expr
                        type_qualifier pure
                          identifier uint8
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier ptr
                    binary +
                      field_expr
                        unary @
                          identifier s
                        identifier ptr
                      identifier count
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier len
                    binary -
                      field_expr
                        unary @
                          identifier s
                        identifier len
                      identifier count
                init_expr end
            return_stmt
              identifier $cb_agg_ret
          stmt_list end
        compound_stmt end
      func_decl
        identifier parseIntRem
        arg_list
          var_decl
            arg_list
              identifier $cb_agg_ret
            arg_list end
          .type
            type_resolver &{int, []pure uint8, bool}
          var_decl
            arg_list
              identifier s
            arg_list end
          .type
            type_resolver &[]pure uint8
          var_decl
            arg_list
              identifier radix
            arg_list end
          .type
            type_expr
              identifier int
        arg_list end
        type_resolver &{int, []pure uint8, bool}
        compound_stmt
          decl_list
            var_decl
              arg_list
                identifier value
              arg_list end
            .type
              type_expr
                identifier int
            .value
              int_literal 0
            var_decl
              arg_list
                identifier count
              arg_list end
            .type
              type_expr
                identifier usize
            .value
              int_literal 0
          decl_list end
          stmt_list
                          arg_list
                identifier i
              arg_list end              compound_stmt
                stmt_list
                  if{binary  
                      call
                        identifier isNumeric
                        arg_list
                          cast_expr
                            type_resolver uint8
                            field_expr
                                unary @
                                  identifier s
                                identifier ptr[identifier i]
                        arg_list end
                      bool_literal false compound_stmt
                      stmt_list
                        binary =
                          identifier value
                          binary +
                            binary *
                              identifier value
                              identifier radix
                            cast_expr
                              type_resolver int
                              binary -
                                cast_expr
                                  type_resolver char
                                  field_expr
                                      unary @
                                        identifier s
                                      identifier ptr[identifier i]
                                
                      stmt_list end
                      stmt_list
                        binary =
                          identifier count
                          binary +
                            identifier count
                            cast_expr
                              type_resolver usize
                              int_literal 1
                      stmt_list end
                    compound_stmt end else compound_stmt
                      stmt_list
                        
                      stmt_list end
                    compound_stmt end}
                stmt_list end
              compound_stmt end
          stmt_list end
          stmt_list
            .pre_nodes
              binary =
                unary @
                  identifier $cb_agg_ret
                init_expr
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier first
                    identifier value
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier second
                    init_expr
                      type_expr
                        slice_type [ ] 
                          type_expr
                            type_qualifier pure
                              identifier uint8
                      binary =
                        field_expr
                          field_expr
                            unary @
                              identifier $cb_agg_ret
                            identifier second
                          identifier ptr
                        binary +
                          field_expr
                            unary @
                              identifier s
                            identifier ptr
                          identifier count
                      binary =
                        field_expr
                          field_expr
                            unary @
                              identifier $cb_agg_ret
                            identifier second
                          identifier len
                        binary -
                          field_expr
                            unary @
                              identifier s
                            identifier len
                          identifier count
                    init_expr end
                  binary =
                    field_expr
                      unary @
                        identifier $cb_agg_ret
                      identifier third
                    binary >
                      identifier count
                      cast_expr
                        type_resolver usize
                        int_literal 0
                init_expr end
            return_stmt
              identifier $cb_agg_ret
          stmt_list end
        compound_stmt end
      func_decl
        identifier aoc01
        arg_list
        arg_list end
        type_expr
          identifier int
        compound_stmt
          decl_list
            var_decl
              arg_list
                identifier stat
              arg_list end
            .type
              type_expr
                identifier sys::Stat
            .value
              init_expr
                binary =
                  field_expr
                    identifier stat
                    identifier size
                  cast_expr
                    type_resolver usize
                    int_literal 0
                binary =
                  field_expr
                    identifier stat
                    identifier mtime
                  cast_expr
                    type_resolver int64
                    int_literal 0
                binary =
                  field_expr
                    identifier stat
                    identifier atime
                  cast_expr
                    type_resolver int64
                    int_literal 0
                binary =
                  field_expr
                    identifier stat
                    identifier ctime
                  cast_expr
                    type_resolver int64
                    int_literal 0
                binary =
                  field_expr
                    identifier stat
                    identifier mode
                  int_literal 0
              init_expr end
            var_decl
              arg_list
                identifier err
              arg_list end
            .value
              .pre_nodes
                var_decl
                  arg_list
                    identifier $cbT15
                  arg_list end
                .value
                  init_expr
                    type_expr
                      type_resolver []pure uint8
                    binary =
                      field_expr
                        identifier $cbT15
                        identifier ptr
                      string_literal "aoc01_part1.txt"
                    binary =
                      field_expr
                        identifier $cbT15
                        identifier len
                      cast_expr
                        type_resolver usize
                        int_literal 15
                  init_expr end
              call
                identifier sys::stat
                arg_list
                  unary &
                    identifier $cbT15
                  unary &
                    identifier stat
                arg_list end
          decl_list end
          stmt_list
            if{binary  
                identifier err
                int_literal 0 compound_stmt
                stmt_list
                  .pre_nodes
                    var_decl
                      arg_list
                        identifier $cbT16
                      arg_list end
                    .value
                      init_expr
                        type_expr
                          type_resolver []pure uint8
                        binary =
                          field_expr
                            identifier $cbT16
                            identifier ptr
                          string_literal "STAT ERROR"
                        binary =
                          field_expr
                            identifier $cbT16
                            identifier len
                          cast_expr
                            type_resolver usize
                            int_literal 10
                      init_expr end
                  call
                    identifier println
                    arg_list
                      unary &
                        identifier $cbT16
                    arg_list end
                stmt_list end
                stmt_list
                  call
                    identifier sys::exit
                    arg_list
                      int_literal 1
                    arg_list end
                stmt_list end
              compound_stmt end}
          stmt_list end
          decl_list
            .pre_nodes
              .pre_nodes
                var_decl
                  arg_list
                    identifier $cbT17
                  arg_list end
                .value
                  init_expr
                    type_expr
                      type_resolver []pure uint8
                    binary =
                      field_expr
                        identifier $cbT17
                        identifier ptr
                      string_literal "aoc01_part1.txt"
                    binary =
                      field_expr
                        identifier $cbT17
                        identifier len
                      cast_expr
                        type_resolver usize
                        int_literal 15
                  init_expr end
              call
                identifier sys::open
                arg_list
                  unary &
                    identifier $cbT6
                  unary &
                    identifier $cbT17
                  identifier sys::Read
                  int_literal 0
                arg_list end
            var_decl
              arg_list
                identifier $cbT6
              arg_list end
            var_decl
              arg_list
                identifier fd
              arg_list end
            .type
              type_expr
                type_resolver FileHandle
            .value
              field_expr
                identifier $cbT6
                identifier first
            binary =
              identifier err
              field_expr
                identifier $cbT6
                identifier second

          decl_list end
          stmt_list
            if{binary  
                identifier err
                int_literal 0 compound_stmt
                stmt_list
                  .pre_nodes
                    var_decl
                      arg_list
                        identifier $cbT18
                      arg_list end
                    .value
                      init_expr
                        type_expr
                          type_resolver []pure uint8
                        binary =
                          field_expr
                            identifier $cbT18
                            identifier ptr
                          string_literal "OPEN ERROR"
                        binary =
                          field_expr
                            identifier $cbT18
                            identifier len
                          cast_expr
                            type_resolver usize
                            int_literal 10
                      init_expr end
                  call
                    identifier println
                    arg_list
                      unary &
                        identifier $cbT18
                    arg_list end
                stmt_list end
                stmt_list
                  call
                    identifier sys::exit
                    arg_list
                      int_literal 1
                    arg_list end
                stmt_list end
              compound_stmt end}
          stmt_list end
          stmt_list
            defer
              call
                identifier sys::close
                arg_list
                  identifier fd
                arg_list end
          stmt_list end
          decl_list
            .pre_nodes
              call
                identifier allocString
                arg_list
                  unary &
                    identifier input
                  field_expr
                    identifier stat
                    identifier size
                arg_list end
            var_decl
              arg_list
                identifier input
              arg_list end
          decl_list end
          stmt_list
            defer
              .pre_nodes
                var_decl
                  arg_list
                    identifier $cbT19
                  arg_list end
                .value
                  identifier input
              call
                identifier free
                arg_list
                  unary &
                    identifier $cbT19
                arg_list end
          stmt_list end
          stmt_list
            binary =
              field_expr
                identifier input
                identifier len
              cast_expr
                type_resolver usize
                .pre_nodes
                  var_decl
                    arg_list
                      identifier $cbT20
                    arg_list end
                  .value
                    identifier input
                call
                  identifier sys::read
                  arg_list
                    identifier fd
                    unary &
                      identifier $cbT20
                  arg_list end
          stmt_list end
          decl_list
            var_decl
              arg_list
                identifier buf
              arg_list end
            .value
              init_expr
                type_expr
                  slice_type [ ] 
                    type_expr
                      type_qualifier pure
                        identifier uint8
                binary =
                  field_expr
                    identifier buf
                    identifier ptr
                  field_expr
                    identifier input
                    identifier ptr
                binary =
                  field_expr
                    identifier buf
                    identifier len
                  field_expr
                    identifier input
                    identifier len
              init_expr end
            .pre_nodes
              call
                identifier allocIntSlice
                arg_list
                  unary &
                    identifier $cbT0
                  .pre_nodes
                    var_decl
                      arg_list
                        identifier $cbT21
                      arg_list end
                    .value
                      identifier buf
                  call
                    identifier countLines
                    arg_list
                      unary &
                        identifier $cbT21
                    arg_list end
                arg_list end
            var_decl
              arg_list
                identifier $cbT0
              arg_list end
            var_decl
              arg_list
                identifier numbers
              arg_list end
            .type
              type_expr
                type_resolver []int
            .value
              field_expr
                identifier $cbT0
                identifier first
            var_decl
              arg_list
                identifier err
              arg_list end
            .type
              type_expr
                type_resolver error
            .value
              field_expr
                identifier $cbT0
                identifier second

          decl_list end
          stmt_list
            if{binary  
                identifier err
                int_literal 0 compound_stmt
                stmt_list
                  call
                    identifier sys::exit
                    arg_list
                      int_literal 1
                    arg_list end
                stmt_list end
              compound_stmt end}
          stmt_list end
          stmt_list
            defer
              .pre_nodes
                var_decl
                  arg_list
                    identifier $cbT22
                  arg_list end
                .value
                  identifier numbers
              call
                identifier free
                arg_list
                  unary &
                    identifier $cbT22
                arg_list end
          stmt_list end
          decl_list
            .pre_nodes
              call
                identifier allocIntSlice
                arg_list
                  unary &
                    identifier $cbT1
                  .pre_nodes
                    var_decl
                      arg_list
                        identifier $cbT23
                      arg_list end
                    .value
                      identifier buf
                  call
                    identifier countLines
                    arg_list
                      unary &
                        identifier $cbT23
                    arg_list end
                arg_list end
            var_decl
              arg_list
                identifier $cbT1
              arg_list end
            var_decl
              arg_list
                identifier sums
              arg_list end
            .type
              type_expr
                type_resolver []int
            .value
              field_expr
                identifier $cbT1
                identifier first
            binary =
              identifier err
              field_expr
                identifier $cbT1
                identifier second

          decl_list end
          stmt_list
            if{binary  
                identifier err
                int_literal 0 compound_stmt
                stmt_list
                  call
                    identifier sys::exit
                    arg_list
                      int_literal 1
                    arg_list end
                stmt_list end
              compound_stmt end}
          stmt_list end
          stmt_list
            defer
              .pre_nodes
                var_decl
                  arg_list
                    identifier $cbT24
                  arg_list end
                .value
                  identifier sums
              call
                identifier free
                arg_list
                  unary &
                    identifier $cbT24
                arg_list end
          stmt_list end
          decl_list
            var_decl
              arg_list
                identifier numberCount
              arg_list end
            .value
              int_literal 0
          decl_list end
          stmt_list
                          binary >
                field_expr
                  identifier buf
                  identifier len
                cast_expr
                  type_resolver usize
                  int_literal 0              compound_stmt
                stmt_list
                  .pre_nodes
                    .pre_nodes
                      var_decl
                        arg_list
                          identifier $cbT25
                        arg_list end
                      .value
                        identifier buf
                    call
                      identifier trimNonNumeric
                      arg_list
                        unary &
                          identifier buf
                        unary &
                          identifier $cbT25
                      arg_list end
                  binary =
                    identifier buf

                stmt_list end
                decl_list
                  .pre_nodes
                    .pre_nodes
                      var_decl
                        arg_list
                          identifier $cbT26
                        arg_list end
                      .value
                        identifier buf
                    call
                      identifier parseIntRem
                      arg_list
                        unary &
                          identifier $cbT2
                        unary &
                          identifier $cbT26
                        int_literal 10
                      arg_list end
                  var_decl
                    arg_list
                      identifier $cbT2
                    arg_list end
                  var_decl
                    arg_list
                      identifier n
                    arg_list end
                  .type
                    type_expr
                      type_resolver int
                  .value
                    field_expr
                      identifier $cbT2
                      identifier first
                  var_decl
                    arg_list
                      identifier nbuf
                    arg_list end
                  .type
                    type_expr
                      type_resolver []pure uint8
                  .value
                    field_expr
                      identifier $cbT2
                      identifier second
                  var_decl
                    arg_list
                      identifier ok
                    arg_list end
                  .type
                    type_expr
                      type_resolver bool
                  .value
                    field_expr
                      identifier $cbT2
                      identifier third

                decl_list end
                stmt_list
                  binary =
                    identifier buf
                    identifier nbuf
                stmt_list end
                stmt_list
                  if{binary  
                      identifier ok
                      bool_literal false compound_stmt
                      stmt_list
                        binary =
                          field_expr
                              identifier numbers
                              identifier ptr[identifier numberCount]
                          identifier n
                      stmt_list end
                      stmt_list
                        binary =
                          identifier numberCount
                          binary +
                            identifier numberCount
                            int_literal 1
                      stmt_list end
                    compound_stmt end else compound_stmt
                      stmt_list
                        
                      stmt_list end
                    compound_stmt end}
                stmt_list end
              compound_stmt end
          stmt_list end
          decl_list
            var_decl
              arg_list
                identifier incCount
              arg_list end
            .value
              int_literal 0
            var_decl
              arg_list
                identifier sumIncCount
              arg_list end
            .value
              int_literal 0
          decl_list end
          stmt_list
                          arg_list
                identifier i
              arg_list end              compound_stmt
                stmt_list
                  if{binary >
                      field_expr
                          identifier numbers
                          identifier ptr[identifier i]
                      field_expr
                          identifier numbers
                          identifier ptr[binary -
                          identifier i
                          int_literal 1] compound_stmt
                      stmt_list
                        binary =
                          identifier incCount
                          binary +
                            identifier incCount
                            int_literal 1
                      stmt_list end
                    compound_stmt end}
                stmt_list end
              compound_stmt end
          stmt_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT27
                arg_list end
              .value
                init_expr
                  type_expr
                    type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT27
                      identifier ptr
                    string_literal ""
                  binary =
                    field_expr
                      identifier $cbT27
                      identifier len
                    cast_expr
                      type_resolver usize
                      int_literal 0
                init_expr end
            call
              identifier println
              arg_list
                unary &
                  identifier $cbT27
              arg_list end
          stmt_list end
          stmt_list
                          arg_list
                identifier i
              arg_list end              compound_stmt
                stmt_list
                  if{binary <
                      identifier i
                      binary -
                        identifier numberCount
                        int_literal 2 compound_stmt
                      stmt_list
                        binary =
                          field_expr
                              identifier sums
                              identifier ptr[identifier i]
                          binary +
                            binary +
                              field_expr
                                  identifier numbers
                                  identifier ptr[identifier i]
                              field_expr
                                  identifier numbers
                                  identifier ptr[binary +
                                  identifier i
                                  int_literal 1]
                            field_expr
                                identifier numbers
                                identifier ptr[binary +
                                identifier i
                                int_literal 2]
                      stmt_list end
                    compound_stmt end}
                stmt_list end
              compound_stmt end
          stmt_list end
          stmt_list
                          arg_list
                identifier i
              arg_list end              compound_stmt
                stmt_list
                  if{binary >
                      field_expr
                          identifier sums
                          identifier ptr[identifier i]
                      field_expr
                          identifier sums
                          identifier ptr[binary -
                          identifier i
                          int_literal 1] compound_stmt
                      stmt_list
                        binary =
                          identifier sumIncCount
                          binary +
                            identifier sumIncCount
                            int_literal 1
                      stmt_list end
                    compound_stmt end}
                stmt_list end
              compound_stmt end
          stmt_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT28
                arg_list end
              .value
                init_expr
                  type_expr
                    type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT28
                      identifier ptr
                    string_literal "increase count: "
                  binary =
                    field_expr
                      identifier $cbT28
                      identifier len
                    cast_expr
                      type_resolver usize
                      int_literal 16
                init_expr end
            call
              identifier print
              arg_list
                unary &
                  identifier $cbT28
              arg_list end
          stmt_list end
          stmt_list
            call
              identifier print
              arg_list
                identifier incCount
              arg_list end
          stmt_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT29
                arg_list end
              .value
                init_expr
                  type_expr
                    type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT29
                      identifier ptr
                    string_literal ""
                  binary =
                    field_expr
                      identifier $cbT29
                      identifier len
                    cast_expr
                      type_resolver usize
                      int_literal 0
                init_expr end
            call
              identifier println
              arg_list
                unary &
                  identifier $cbT29
              arg_list end
          stmt_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT30
                arg_list end
              .value
                init_expr
                  type_expr
                    type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT30
                      identifier ptr
                    string_literal "sum increase count: "
                  binary =
                    field_expr
                      identifier $cbT30
                      identifier len
                    cast_expr
                      type_resolver usize
                      int_literal 20
                init_expr end
            call
              identifier print
              arg_list
                unary &
                  identifier $cbT30
              arg_list end
          stmt_list end
          stmt_list
            call
              identifier print
              arg_list
                identifier sumIncCount
              arg_list end
          stmt_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT31
                arg_list end
              .value
                init_expr
                  type_expr
                    type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT31
                      identifier ptr
                    string_literal ""
                  binary =
                    field_expr
                      identifier $cbT31
                      identifier len
                    cast_expr
                      type_resolver usize
                      int_literal 0
                init_expr end
            call
              identifier println
              arg_list
                unary &
                  identifier $cbT31
              arg_list end
          stmt_list end
          decl_list
            var_decl
              arg_list
                identifier helloworld
              arg_list end
            .value
              init_expr
                type_expr
                  type_resolver []pure uint8
                binary =
                  field_expr
                    identifier helloworld
                    identifier ptr
                  string_literal "hello world"
                binary =
                  field_expr
                    identifier helloworld
                    identifier len
                  cast_expr
                    type_resolver usize
                    int_literal 11
              init_expr end
          decl_list end
          stmt_list
            .pre_nodes
              var_decl
                arg_list
                  identifier $cbT32
                arg_list end
              .value
                init_expr
                  type_resolver []pure uint8
                  binary =
                    field_expr
                      identifier $cbT32
                      identifier ptr
                    unary &
                      field_expr
                          identifier helloworld
                          identifier ptr[int_literal 1]
                  binary =
                    field_expr
                      identifier $cbT32
                      identifier len
                    cast_expr
                      type_resolver usize
                      binary -
                        int_literal 10
                        int_literal 1
                init_expr end
            call
              identifier println
              arg_list
                unary &
                  identifier $cbT32
              arg_list end
          stmt_list end
          decl_list
            var_decl
              arg_list
                identifier val
              arg_list end
            .type
              type_expr
                tuple_type
                  arg_list
                    type_expr
                      identifier usize
                    type_expr
                      identifier bool
                  arg_list end
            .value
              init_expr
                binary =
                  field_expr
                    identifier val
                    identifier first
                  cast_expr
                    type_resolver usize
                    int_literal 0
                binary =
                  field_expr
                    identifier val
                    identifier second
                  bool_literal false
              init_expr end
            var_decl
              arg_list
                identifier val2
              arg_list end
            .type
              type_expr
                tuple_type
                  arg_list
                    type_expr
                      identifier usize
                    type_expr
                      identifier bool
                  arg_list end
            .value
              init_expr
                binary =
                  field_expr
                    identifier val2
                    identifier first
                  cast_expr
                    type_resolver usize
                    int_literal 0
                binary =
                  field_expr
                    identifier val2
                    identifier second
                  bool_literal true
              init_expr end
          decl_list end
          stmt_list
            if{binary  
                identifier val
                identifier val2 compound_stmt
                stmt_list
                  .pre_nodes
                    var_decl
                      arg_list
                        identifier $cbT33
                      arg_list end
                    .value
                      init_expr
                        type_expr
                          type_resolver []pure uint8
                        binary =
                          field_expr
                            identifier $cbT33
                            identifier ptr
                          string_literal "Equal"
                        binary =
                          field_expr
                            identifier $cbT33
                            identifier len
                          cast_expr
                            type_resolver usize
                            int_literal 5
                      init_expr end
                  call
                    identifier println
                    arg_list
                      unary &
                        identifier $cbT33
                    arg_list end
                stmt_list end
              compound_stmt end else compound_stmt
                stmt_list
                  .pre_nodes
                    var_decl
                      arg_list
                        identifier $cbT34
                      arg_list end
                    .value
                      init_expr
                        type_expr
                          type_resolver []pure uint8
                        binary =
                          field_expr
                            identifier $cbT34
                            identifier ptr
                          string_literal "Not Equal"
                        binary =
                          field_expr
                            identifier $cbT34
                            identifier len
                          cast_expr
                            type_resolver usize
                            int_literal 9
                      init_expr end
                  call
                    identifier println
                    arg_list
                      unary &
                        identifier $cbT34
                    arg_list end
                stmt_list end
              compound_stmt end}
          stmt_list end
          decl_list
            var_decl
              arg_list
                identifier values
              arg_list end
            .type
              type_expr
                tuple_type
                  arg_list
                    type_expr
                      identifier usize
                    type_expr
                      identifier usize
                    type_expr
                      identifier usize
                    type_expr
                      identifier usize
                    type_expr
                      identifier usize
                  arg_list end
            .value
              init_expr
                binary =
                  field_expr
                    identifier values
                    identifier first
                  cast_expr
                    type_resolver usize
                    int_literal 0
                binary =
                  field_expr
                    identifier values
                    identifier second
                  cast_expr
                    type_resolver usize
                    int_literal 0
                binary =
                  field_expr
                    identifier values
                    identifier third
                  cast_expr
                    type_resolver usize
                    int_literal 0
                binary =
                  field_expr
                    identifier values
                    identifier fourth
                  cast_expr
                    type_resolver usize
                    int_literal 0
                binary =
                  field_expr
                    identifier values
                    identifier fifth
                  cast_expr
                    type_resolver usize
                    int_literal 0
              init_expr end
            var_decl
              arg_list
                identifier offs3
              arg_list end
            .value
              cast_expr
                type_expr
                  identifier uintptr
                cast_expr
                  type_expr
                    type_qualifier ptr
                      identifier opaque
                  unary &
                    field_expr
                      identifier values
                      identifier third
            var_decl
              arg_list
                identifier offs4
              arg_list end
            .value
              cast_expr
                type_expr
                  identifier uintptr
                cast_expr
                  type_expr
                    type_qualifier ptr
                      identifier opaque
                  unary &
                    field_expr
                      identifier values
                      identifier fourth
          decl_list end
          stmt_list
            call
              identifier println
              arg_list
                cast_expr
                  type_expr
                    identifier int
                  int_literal 48
              arg_list end
          stmt_list end
          stmt_list
            call
              identifier println
              arg_list
                cast_expr
                  type_resolver usize
                  binary -
                    identifier offs4
                    identifier offs3
              arg_list end
          stmt_list end
          stmt_list
            return_stmt
              identifier incCount
          stmt_list end
        compound_stmt end
      func_decl
        identifier free
        arg_list
          var_decl
            arg_list
              identifier s
            arg_list end
          .type
            type_resolver &[]uint8
        arg_list end
        compound_stmt
          stmt_list
            call
              identifier mem::free
              arg_list
                field_expr
                  unary @
                    identifier s
                  identifier ptr
              arg_list end
          stmt_list end
        compound_stmt end
      func_decl
        identifier free
        arg_list
          var_decl
            arg_list
              identifier s
            arg_list end
          .type
            type_resolver &[]int
        arg_list end
        compound_stmt
          stmt_list
            call
              identifier mem::free
              arg_list
                field_expr
                  unary @
                    identifier s
                  identifier ptr
              arg_list end
          stmt_list end
        compound_stmt end
    decl_list end
  code_unit ./src/aoc/aoc01.cb end
module aoc end
