code_unit ./src/std/linux/io.cb
  decl_list
    import_decl{ identifier std::system}
    import_decl{ identifier std::linux::syscall identifier syscall}
    linkage_specifier{ extern decl_list
        func_decl{identifier stdin (): type_expr{identifier FileHandle} compound_stmt
            stmt_list
              return_stmt
                cast_expr
                  type_expr{identifier FileHandle}
                  cast_expr
                    type_expr{identifier uintptr}
                    int_literal 0

            stmt_list end

          compound_stmt end
}
        func_decl{identifier stdout (): type_expr{identifier FileHandle} compound_stmt
            stmt_list
              return_stmt
                cast_expr
                  type_expr{identifier FileHandle}
                  cast_expr
                    type_expr{identifier uintptr}
                    int_literal 1

            stmt_list end

          compound_stmt end
}
        func_decl{identifier stderr (): type_expr{identifier FileHandle} compound_stmt
            stmt_list
              return_stmt
                cast_expr
                  type_expr{identifier FileHandle}
                  cast_expr
                    type_expr{identifier uintptr}
                    int_literal 2

            stmt_list end

          compound_stmt end
}
        func_decl{identifier read (var_decl{(identifier fd): type_expr{identifier FileHandle}}, var_decl{(identifier data): }) compound_stmt
            stmt_list
              call{identifier syscall::read (cast_expr
                  type_expr{identifier uint}
                  cast_expr
                    type_expr{identifier uintptr}
                    identifier fd, field_expr
                  unary @
                    identifier data
                  identifier ptr, field_expr
                  unary @
                    identifier data
                  identifier len)}
            stmt_list end

          compound_stmt end
}
        func_decl{identifier write (var_decl{(identifier fd): type_expr{identifier FileHandle}}, var_decl{(identifier data): }) compound_stmt
            stmt_list
              call{identifier syscall::write (cast_expr
                  type_expr{identifier uint}
                  cast_expr
                    type_expr{identifier uintptr}
                    identifier fd, field_expr
                  unary @
                    identifier data
                  identifier ptr, field_expr
                  unary @
                    identifier data
                  identifier len)}
            stmt_list end

          compound_stmt end
}
        func_decl{identifier close (var_decl{(identifier fd): type_expr{identifier FileHandle}}): type_expr{identifier $error} compound_stmt
            stmt_list
              call{identifier syscall::close (cast_expr
                  type_expr{identifier uint}
                  cast_expr
                    type_expr{identifier uintptr}
                    identifier fd)}
            stmt_list end

            stmt_list
              return_stmt
                int_literal 0

            stmt_list end

          compound_stmt end
}
      decl_list end
}
  decl_list end

code_unit ./src/std/linux/io.cb end

