import system
import linux::syscall as syscall

extern(carbon, system) {

func stdin(): File_Handle {
    return cast(File_Handle)(cast(uintptr)0)
}

func stdout(): File_Handle {
    return cast(File_Handle)(cast(uintptr)1)
}

func stderr(): File_Handle {
    return cast(File_Handle)(cast(uintptr)2)
}

func read(fd: File_Handle, data: []uint8) {
    syscall::read(cast(uint)(cast(uintptr)fd), data.ptr, data.len)
}

func write(fd: File_Handle, data: []pure uint8) {
    syscall::write(cast(uint)(cast(uintptr)fd), data.ptr, data.len)
}

func close(fd: File_Handle) : error {
    syscall::close(cast(uint)(cast(uintptr)fd))
    return noerr
}

func chdir(path: []pure uint8): error {
    syscall::chdir(path.ptr)
    return noerr
}

}