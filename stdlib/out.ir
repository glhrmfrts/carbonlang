string #0: "Hello, world
";
func cb__Nstd__Nsystem__Nstdin -> FileHandle
    ir_return 0;
endf

func cb__Nstd__Nsystem__Nstdout -> FileHandle
    ir_return 1;
endf

func cb__Nstd__Nsystem__Nstderr -> FileHandle
    ir_return 2;
endf

func cb__Nstd__Nsystem__Nread__AFileHandle__Aptr__Tslice__Tuint8 -> isize
    arg #0 fd: FileHandle;
    arg #1 data: ptr__Tslice__Tuint8;
    ir_cast A0; (push)
    ir_deref A1; (push)
    ir_deref A1; (push)
    ir_call cb__Nstd__Nlinux__Nsyscall__Nread__Auint__Aptr__Tuint8__Ausize POP() [POP() . 0] [POP() . 1];
endf

func cb__Nstd__Nsystem__Nwrite__AFileHandle__Aptr__Tslice__Tpure__Tuint8 -> isize
    arg #0 fd: FileHandle;
    arg #1 data: ptr__Tslice__Tpure__Tuint8;
    ir_cast A0; (push)
    ir_deref A1; (push)
    ir_deref A1; (push)
    ir_call cb__Nstd__Nlinux__Nsyscall__Nwrite__Auint__Aptr__Tpure__Tuint8__Ausize POP() [POP() . 0] [POP() . 1];
endf

func cb__Nstd__Nsystem__Nalloc__Aptr__Ttuple__Tptr__Topaque__Terror__Ausize -> ptr__Ttuple__Tptr__Topaque__Terror
    arg #0 $cb_agg_ret: ptr__Ttuple__Tptr__Topaque__Terror;
    arg #1 sz: usize;
endf

func cb__Nstd__Nsystem__Nexit__Aint -> void
    arg #0 code: int;
    ir_call cb__Nstd__Nlinux__Nsyscall__Nexit__Aint A0;
endf

func __carbon_main -> void
    arg #0 argc: int;
    arg #1 argv: ptr__Tptr__Tpure__Tuint8;
    local #0 $cbT0: slice__Tpure__Tuint8;
    ir_load_addr STR0; (push)
    ir_load [L0 . 0] POP();
    ir_load [L0 . 1] 13;
    ir_call cb__Nstd__Nsystem__Nstdout; (push)
    ir_load_addr L0; (push)
    ir_call cb__Nstd__Nsystem__Nwrite__AFileHandle__Aptr__Tslice__Tpure__Tuint8 POP() POP(); (push)
    ir_noop POP();
    ir_call cb__Nstd__Nsystem__Nexit__Aint A0;
endf

func cb__Nstd__Nlinux__Nsyscall__Nwrite__Auint__Aptr__Tpure__Tuint8__Ausize -> void
    arg #0 fd: uint;
    arg #1 ptr: ptr__Tpure__Tuint8;
    arg #2 len: usize;
    ir_asm 
    mov $1, %rax            # system call 1 is write
                            # file handle is already in rdi
                            # data is already in rsi
                            # number of bytes is already in rdx
    syscall

;
endf

func cb__Nstd__Nlinux__Nsyscall__Nread__Auint__Aptr__Tuint8__Ausize -> void
    arg #0 fd: uint;
    arg #1 ptr: ptr__Tuint8;
    arg #2 len: usize;
    ir_asm 
    mov $0, %rax            # system call 0 is read
                            # file handle is already in rdi
                            # data is already in rsi
                            # number of bytes is already in rdx
    syscall

;
endf

func cb__Nstd__Nlinux__Nsyscall__Nmmap__Aptr__Topaque__Ausize__Aint__Aint__Aint__Ausize -> void
    arg #0 addr: ptr__Topaque;
    arg #1 size: usize;
    arg #2 prot: int;
    arg #3 flags: int;
    arg #4 fd: int;
    arg #5 offs: usize;
    ir_asm     mov $9, %rax
    mov %rcx, %r10
    syscall
;
endf

func cb__Nstd__Nlinux__Nsyscall__Nexit__Aint -> void
    arg #0 code: int;
    ir_asm     mov $60, %rax           # system call 60 is exit
                            # code is already in rdi
    syscall
;
endf

func cb__Nstd__Nsystem__Nalloc__Aptr__Ttuple__Tptr__Topaque__Terror__Ausize__Aptr__Topaque -> ptr__Ttuple__Tptr__Topaque__Terror
endf

func cb__Nstd__Nsystem__Nfree__Aptr__Topaque -> void
endf

func cb__Nstd__Nsystem__Nopen__Aptr__Ttuple__TFileHandle__Terror__Aptr__Tslice__Tpure__Tuint8__AOpenFlags__Aint -> ptr__Ttuple__TFileHandle__Terror
endf

func cb__Nstd__Nsystem__Nfdflags__AFileHandle -> int
endf

func cb__Nstd__Nsystem__Nclose__AFileHandle -> error
endf

func cb__Nstd__Nsystem__Nseek__AFileHandle__Aint64__AWhence -> void
endf

func cb__Nstd__Nsystem__Nstat__Aptr__Tslice__Tpure__Tuint8__Aptr__TStat -> error
endf

func cb__Nstd__Nsystem__Nstat__AFileHandle__Aptr__TStat -> error
endf

func cb__Nstd__Nsystem__Nunlink__Aptr__Tslice__Tpure__Tuint8 -> error
endf

func cb__Nstd__Nsystem__Nremove__Aptr__Tslice__Tpure__Tuint8 -> error
endf

func cb__Nstd__Nsystem__Nrename__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8 -> error
endf

func cb__Nstd__Nsystem__Ncopy__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8 -> error
endf

func cb__Nstd__Nsystem__Nmkdir__Aptr__Tslice__Tpure__Tuint8 -> error
endf

func cb__Nstd__Nsystem__Nprocess__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8 -> error
endf

func cb__Nstd__Nsystem__NmakeThread__Aptr__Ttuple__TThreadHandle__Terror__Afuncptr__Tptr__Topaque__Tvoid__Aptr__Topaque -> ptr__Ttuple__TThreadHandle__Terror
endf

func cb__Nstd__Nsystem__Njoin__AThreadHandle -> error
endf

func cb__Nstd__Nsystem__NthreadId -> int
endf

func cb__Nstd__Nsystem__NcpuCount -> int
endf

func cb__Nstd__Nsystem__NmakeMutex__Aptr__Ttuple__TMutexHandle__Terror -> ptr__Ttuple__TMutexHandle__Terror
endf

func cb__Nstd__Nsystem__Nlock__AMutexHandle -> error
endf

func cb__Nstd__Nsystem__Nunlock__AMutexHandle -> error
endf

func cb__Nstd__Nsystem__Ndestroy__AMutexHandle -> void
endf

func cb__Nstd__Nsystem__NsleepMs__Auint64 -> void
endf

