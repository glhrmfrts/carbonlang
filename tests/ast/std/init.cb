code_unit{
  std/init.cb
  decl_list{
    import_decl{
      identifier{"std::io"}}
    import_decl{
      identifier{"std::string"}}
    import_decl{
      identifier{"std::rawstring"}}
    import_decl{
      identifier{"std::memory"}
      identifier{"mem"}}
    visibility_specifier{
      private
      linkage_specifier{
        extern(C)
        decl_list{
          linkage_specifier{
            extern(C)
            func_decl{
              identifier{"GetCommandLineA"}
              arg_list()
              :type_expr{
                type_qualifier{reference,
                  identifier{"char"}}}}}}}}
    visibility_specifier{
      private
      decl_list{
        func_decl{
          identifier{"init_command_line"}
          arg_list()
          :type_expr{
            }
compound_stmt{
            decl_list{
              var_decl{
                identifier{"cmdline"}
                =call_expr{
                  identifier{"GetCommandLineA"}
                  arg_list()}}
              var_decl{
                identifier{"data"}
                =}
              var_decl{
                identifier{"result"}
                =init_expr{
                  type=type_expr{
                    }
                  arg_list(
                    identifier{"data"}
                    int_literal{1})}}}
            stmt_list{
              binary_expr{
                index_expr{
                  identifier{"result"}
                  int_literal{0}}
                =
                init_expr{
                  type=type_expr{
                    identifier{"string"}}
                  arg_list(
                    identifier{"cmdline"}
                    )}}
              return_stmt{
                                identifier{"result"}}}}}
        func_decl{
          identifier{"free_command_line"}
          arg_list(
            var_decl{
              identifier{"args"}
              :type_expr{
                }})
compound_stmt{
            stmt_list{
              call_expr{
                identifier{"mem::free"}
                arg_list(
                  )}}}}
        linkage_specifier{
          extern(C)
          func_decl{
            identifier{"carbon_main"}
            arg_list()
            :type_expr{
              identifier{"int"}}
compound_stmt{
              decl_list{
                var_decl{
                  identifier{"args"}
                  =call_expr{
                    identifier{"init_command_line"}
                    arg_list()}}}
              stmt_list{
                }
              decl_list{
                var_decl{
                  identifier{"s"}
                  =string_literal{"0"}}}
              stmt_list{
                }
              stmt_list{
                call_expr{
                  identifier{"free_command_line"}
                  arg_list(
                    identifier{"args"})}
                return_stmt{
                                    int_literal{0}}}}}}}}}}
