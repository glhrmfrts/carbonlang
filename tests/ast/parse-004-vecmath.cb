code_unit{
  tests/parse-004-vecmath.cb
  decl_list{
    type_decl{
      identifier{""}
      =      type_expr{
                struct_type{
                    arg_list(
            var_decl{
              identifier{""}
              :              type_expr{
                                identifier{""}}}
            var_decl{
              identifier{""}
              :              type_expr{
                                identifier{""}}})}}}
    func_decl{
      identifier{""}
      arg_list(
        var_decl{
          identifier{""}
          :          type_expr{
                        identifier{""}}}
        var_decl{
          identifier{""}
          :          type_expr{
                        identifier{""}}})
      :      type_expr{
                identifier{""}}
      compound_stmt{
        stmt_list{
          return_stmt{
                        binary_expr{
              identifier{""}
              +
              identifier{""}}}}}}
    func_decl{
      identifier{""}
      arg_list(
        var_decl{
          identifier{""}
          :          type_expr{
                        identifier{""}}}
        var_decl{
          identifier{""}
          :          type_expr{
                        identifier{""}}})
      :      type_expr{
                identifier{""}}
      compound_stmt{
        stmt_list{
          return_stmt{
                        binary_expr{
              identifier{""}
              -
              identifier{""}}}}}}
    func_decl{
      identifier{""}
      arg_list(
        var_decl{
          identifier{""}
          :          type_expr{
                        identifier{""}}}
        var_decl{
          identifier{""}
          :          type_expr{
                        identifier{""}}})
      compound_stmt{
        stmt_list{
          return_stmt{
                        binary_expr{
              identifier{""}
              *
              identifier{""}}}}}}
    func_decl{
      identifier{""}
      arg_list(
        var_decl{
          identifier{""}
          :          type_expr{
                        identifier{""}}}
        var_decl{
          identifier{""}
          :          type_expr{
                        array_type{
              size=dynamic
              type_expr{
                                identifier{""}}}}})
      :      type_expr{
                identifier{""}}
      compound_stmt{
        decl_list{
          var_decl{
            identifier{""}
            :            type_expr{
                            identifier{""}}
            =            init_expr{
              arg_list(
                var_decl{
                  identifier{""}
                  =                  int_literal{0}}
                var_decl{
                  identifier{""}
                  =                  int_literal{0}})}}
          var_decl{
            identifier{""}
            :            type_expr{
                            identifier{""}}
            =            init_expr{
              arg_list(
                int_literal{0}
                int_literal{0})}}
          var_decl{
            identifier{""}
            =            init_expr{
              type=              identifier{""}
              arg_list(
                int_literal{0}
                int_literal{0})}}
          var_decl{
            identifier{""}
            =            init_expr{
              type=              identifier{""}
              arg_list(
                int_literal{0}
                int_literal{0})}}
          var_decl{
            identifier{""}
            =            init_expr{
              type=              identifier{""}
              arg_list(
                var_decl{
                  identifier{""}
                  =                  init_expr{
                    arg_list(
                      int_literal{0}
                      int_literal{0})}}
                var_decl{
                  identifier{""}
                  =                  init_expr{
                    arg_list(
                      int_literal{0}
                      int_literal{0})}})}}
          var_decl{
            identifier{""}
            =            init_expr{
              type=              identifier{""}
              arg_list(
                var_decl{
                  identifier{""}
                  =                  init_expr{
                    arg_list(
                      int_literal{0}
                      int_literal{0})}}
                var_decl{
                  identifier{""}
                  =                  init_expr{
                    arg_list(
                      int_literal{0}
                      int_literal{0})}})}}
          var_decl{
            identifier{""}
            =            init_expr{
              type=              type_expr{
                                array_type{
                  size=dynamic
                  type_expr{
                                        identifier{""}}}}
              arg_list(
                float_literal{1}
                float_literal{0})}}
          var_decl{
            identifier{""}
            =            init_expr{
              type=              type_expr{
                                array_type{
                  size=dynamic
                  type_expr{
                                        identifier{""}}}}
              arg_list(
                float_literal{1}
                float_literal{0})}}}
        stmt_list{
          call_expr{
            identifier{""}
            arg_list(
              call_expr{
                identifier{""}
                arg_list(
                  identifier{""}
                  identifier{""})})}
          call_expr{
            identifier{""}
            arg_list(
              call_expr{
                identifier{""}
                arg_list(
                  identifier{""}
                  identifier{""})})}
          call_expr{
            identifier{""}
            arg_list(
              call_expr{
                identifier{""}
                arg_list(
                  identifier{""}
                  identifier{""})})}}
        decl_list{
          var_decl{
            identifier{""}
            :            type_expr{
                            identifier{""}}}}
        stmt_list{
          return_stmt{
                        identifier{""}}}}}
    func_decl{
      identifier{""}
      arg_list()
      compound_stmt{
        decl_list{
          var_decl{
            identifier{""}
            :            type_expr{
                            identifier{""}}
            =            int_literal{500}}}
        stmt_list{
          return_stmt{
                        binary_expr{
              int_literal{244}
              +
              identifier{""}}}}}}
    func_decl{
      identifier{""}
      arg_list()
      :      type_expr{
                identifier{""}}
      compound_stmt{
        stmt_list{
          return_stmt{
                        call_expr{
              identifier{""}
              arg_list()}}}}}}}
