code_unit{
  main.cb
  decl_list{
    import_decl{ std::io}
    import_decl{ std::string}
    import_decl{ std::rawstring}
    type_decl{Test = type_expr{struct_type{decl_list{
            var_decl{n: type_expr{int}}}}}}
    func_decl{make_array (T, var_decl{n: type_expr{int}}) {
        stmt_list{
          return{init{type=type_expr{T} (n)}}}}}
    func_decl{main (var_decl{args: }) {
        stmt_list{
          call{println ({* args}.data[0].data)}}
        decl_list{
          call{make_array ({& t}, Test, 3)}
          var_decl{t}}
        stmt_list{
          return{1}}}}
    func_decl{make_array (var_decl{$cb_agg_ret: }, var_decl{n: }):  {
        decl_list{
          {{* $cb_agg_ret} = init{type=type_expr{T} 
            {{* $cb_agg_ret}.n = n}
            }}
          return{$cb_agg_ret}}}}}}
