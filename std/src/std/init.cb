/// Initialization routines

import std::io;
import std::string;
import std::rawstring;
import std::alloc as alloc;
import std::os::windows;

private {

func initCommandLine(): [&]String {
    let cmdline = GetCommandLineA();
    let data = cast[&String] alloc::alloc(sizeof(String));
    let result = [&]String{ data, 1 };
    result[0] = String{ cmdline, cmdline.strlen };
    return result;
}

func freeCommandLine(args: [&]String) {
    alloc::free(cast[raw_ptr] args.data);
}

extern(C) func carbon_main(): int {
    let args = initCommandLine();

    for (i in 0, args.len) {
        println(args[i].data);
    }

    println(1 == 1 then "5685" else "231");

    freeCommandLine(args);
    return 0;
}

}