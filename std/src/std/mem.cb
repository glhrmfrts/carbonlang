type memory = struct {
    ptr: rawptr
    len: usize
}

func as_memory(a) {
    return memory{ cast(rawptr)&a[0], sizeof(a) }
}

/// Copies [size] bytes from [src] to [dest].
func copy(dest: rawptr, src: rawptr, size: usize) {
    asm%{
push rdi
push rsi

mov rdi,rcx
mov rsi,rdx
mov rcx,r8
rep movsb

pop rsi
pop rdi
    }%asm;
}

/// Stores [count] amount of [value] in [dest].
func set(dest: rawptr, value: uint8, count: usize) {
    asm%{
push rdi

mov rdi,rcx
mov rax,rdx
mov rcx,r8
rep stosb

pop rdi
    }%asm;
}

func set(dest: &memory, value: uint8) {
    set(dest.ptr, value, dest.len)
}