import std::alloc as alloc

func copy(str: *pure uint8) {
    return copy(str, str->strlen())
}

func copy(str: *pure uint8, size: usize) {
    let newstr = cast(*uint8) alloc::alloc(size+1)
    copy(newstr, str, size)
    newstr[size] = '\0'
    return newstr
}

func copy(dest: *pure uint8, src: *pure uint8, size: usize) {
    alloc::copy(cast(pointer) dest, cast(pointer) src, size)
}

func set(dest: *pure uint8, value: pure uint8, count: usize) {
    alloc::set(cast(pointer) dest, value, count)
}

func strlen(str: *pure uint8) {
    let c : usize
    let p = str
    while (@p != 0) {
        //let ip = cast[uintptr] p;
        p = p + 1//cast[*char] (ip + 1);
        c = c + 1
    }
    return c
}

func equals(a: *pure uint8, b: *pure uint8) {
    if (a->strlen() != b->strlen()) { return false }

    for (i in 0, a->strlen()) {
        if (a[i] != b[i]) {
            return false
        }
    }

    return true
}