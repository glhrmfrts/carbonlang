import std::libc::string;
import std::memory as mem;

func copy(str: raw_string): raw_string {
    return copy(str, len(str));
}

func copy(str: raw_string, size: usize): raw_string {
    let newstr = cast[raw_string] mem::alloc(size+1);
    copy(newstr, str, size);
    newstr[size] = 0;
    return newstr;
}

func copy(dest: raw_string, src: raw_string, size: usize) {
    mem::copy(cast[raw_ptr] dest, cast[raw_ptr] src, size);
}

func set(dest: raw_string, value: char, count: usize) {
    mem::set(cast[raw_ptr] dest, value, count);
}

func len(str: raw_string): usize {
    return strlen(str);
}

// test stuff

import std::io;
import std::libc::stdio;
import std::libc::stdlib;

func print_the_char(v: char, d: char) {
    puts(&v);
}

func longfunc(a: int, b: int, c: int, d: int, e: int, f: int, g: int, h: int): int {
    return a + b + c + d + e + f + g + h;
}

func main(): int {
    let text = "hello world";
    let newtext = copy(text);
    *newtext = 'K';
    newtext[6] = 'G';
    if ((len(newtext) == 11 || 2+7 > 5) && (4*9*9) >= 7) {
        println(text);
        println(newtext);
    }

    let result = longfunc(1, 1, 1, 1, 1, 1, 1, 1);
    //system("start C:\\code");
    return result;
}