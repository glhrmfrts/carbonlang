import std::alloc as alloc;
import std::os::windows;

type WideString = [*]int16;

type MutableWideString = [&]int16;

/*
func widen(text: [*]char, a: *Allocator): [&]int16 {
    if (!text.len) { return WideString{}; }

    let charcount = MultiByteToWideChar(CP_UTF8, 0, text.data, text.len, nullrawptr, 0) - (size == -1 then 1 else 0);
    let data = a.alloc |> charcount * sizeof(WideString::ElemType);

    let result = MutableWideString{ data, charcount };
    MultiByteToWideChar(CP_UTF8, 0, text, size, result.data, result.len);
    return result;
}

func widen(text: *String) {
    return widen(text.toSlice, text.allocator);
}
*/