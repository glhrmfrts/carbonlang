code_unit{
  std/runtime/memory.cb
  decl_list{
    import_decl{ std::runtime::windows}
    import_decl{ std::mem}
    func_decl{alloc (var_decl{$cb_agg_ret: }, var_decl{size: type_expr{usize}}):  {
        stmt_list{
          {{@ $cb_agg_ret} = init{type=type_expr{memory} 
            {{@ $cb_agg_ret}.ptr = call{HeapAlloc (call{GetProcessHeap ()}, 0, size)}}
            {{@ $cb_agg_ret}.len = size}
            }}
          return{$cb_agg_ret}}}}
    func_decl{free (var_decl{m: type_expr{type_qualifier{optional, memory}}}): type_expr{tuple_type{}} {
        stmt_list{
          call{HeapFree (call{GetProcessHeap ()}, 0, m.ptr)}}
        stmt_list{
          {m.ptr = }}}}}}
