string #0: "aoc01.txt";
string #1: "STAT ERROR";
string #2: "OPEN ERROR";
string #3: "";
string #4: "increase count: ";
string #5: "sum increase count: ";
string #6: "hello world";
string #7: "Equal";
string #8: "Not Equal";
func cb__Nroot__Nalloc_string__Aptr__Tslice__Tuint8__Ausize -> ptr__Tslice__Tuint8
    arg #0 $cb_agg_ret: ptr__Tslice__Tuint8;
    arg #1 sz: usize;
    local #0 $cbT4: tuple__Tptr__Topaque__Terror;
    local #1 data: ptr__Topaque;
    local #2 err: error;
    local #3 temp$receiver$0: ptr__Tslice__Tuint8;
    ir_load_addr L0; (push)
    ir_add A1 1; (push)
    ir_call cb__Nstd__Nmem__Nalloc__Aptr__Ttuple__Tptr__Topaque__Terror__Ausize POP() POP();
    ir_load L1 [L0 . 0];
    ir_load L2 [L0 . 1];
    ir_add A1 1; (push)
    ir_call cb__Nstd__Nmem__Nmemset__Aptr__Topaque__Auint8__Ausize L1 0 POP();
    ir_load L3 A0;
    ir_deref L3; (push)
    ir_load [POP() . 0] L1;
    ir_deref L3; (push)
    ir_load [POP() . 1] A1;
    ir_return A0;
endf

func cb__Nroot__Nalloc_int_slice__Aptr__Ttuple__Tslice__Tint__Terror__Ausize -> ptr__Ttuple__Tslice__Tint__Terror
    arg #0 $cb_agg_ret: ptr__Ttuple__Tslice__Tint__Terror;
    arg #1 n: usize;
    local #0 slice: slice__Tint;
    local #1 $cbT5: tuple__Tptr__Topaque__Terror;
    local #2 buf: ptr__Topaque;
    local #3 err: error;
    local #4 temp$receiver$1: ptr__Ttuple__Tslice__Tint__Terror;
    local #5 temp$receiver$2: ptr__Tslice__Tint;
    local #6 temp$receiver$3: ptr__Ttuple__Tslice__Tint__Terror;
    ir_load_addr L1; (push)
    ir_mul A1 4; (push)
    ir_call cb__Nstd__Nmem__Nalloc__Aptr__Ttuple__Tptr__Topaque__Terror__Ausize POP() POP();
    ir_load L2 [L1 . 0];
    ir_load L3 [L1 . 1];
    ir_jmp_eq L3 0 cb__Nroot__Nalloc_int_slice__Aptr__Ttuple__Tslice__Tint__Terror__Ausize$if100$else;
    ir_make_label cb__Nroot__Nalloc_int_slice__Aptr__Ttuple__Tslice__Tint__Terror__Ausize$if100$body;
    ir_load L4 A0;
    ir_deref L4; (push)
    ir_load_ptr L5 [POP() . 0];
    ir_deref L4; (push)
    ir_load [POP() . 1] L3;
    ir_return A0;
    ir_make_label cb__Nroot__Nalloc_int_slice__Aptr__Ttuple__Tslice__Tint__Terror__Ausize$if100$else;
    ir_load [L0 . 0] L2;
    ir_load [L0 . 1] A1;
    ir_load L6 A0;
    ir_deref L6; (push)
    ir_load [POP() . 0] L0;
    ir_deref L6; (push)
    ir_load [POP() . 1] 0;
    ir_return A0;
endf

func cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8 -> usize
    arg #0 s: ptr__Tslice__Tpure__Tuint8;
    local #0 count: usize;
    local #1 i: int;
    local #2 $foriter: tuple__Tint__Tusize;
    ir_load L0 0;
    ir_load [L2 . 0] 0;
    ir_deref A0; (push)
    ir_load [L2 . 1] [POP() . 1];
    ir_load L1 [L2 . 0];
    ir_make_label cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$f179$cond;
    ir_cast L1; (push)
    ir_jmp_gte POP() [L2 . 1] cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$f179$end;
    ir_make_label cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$f179$body;
    ir_deref A0; (push)
    ir_deref [POP() . 0]; (push)
    ir_index POP() L1; (push)
    ir_jmp_neq POP() #10 cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$if176$else;
    ir_make_label cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$if176$body;
    ir_add L0 1; (push)
    ir_load L0 POP();
    ir_make_label cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$if176$else;
    ir_add L1 1; (push)
    ir_load L1 POP();
    ir_jmp cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$f179$cond;
    ir_make_label cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8$f179$end;
    ir_return L0;
endf

func cb__Nroot__Nis_numeric__Auint8 -> bool
    arg #0 c: uint8;
    local #0 $cbT10: bool;
    ir_jmp_lt A0 #48 cb__Nroot__Nis_numeric__Auint8$if5050$else;
    ir_jmp_gt A0 #57 cb__Nroot__Nis_numeric__Auint8$if5050$else;
    ir_make_label cb__Nroot__Nis_numeric__Auint8$if5050$body;
    ir_load L0 1;
    ir_jmp cb__Nroot__Nis_numeric__Auint8$if5050$end;
    ir_make_label cb__Nroot__Nis_numeric__Auint8$if5050$else;
    ir_load L0 0;
    ir_make_label cb__Nroot__Nis_numeric__Auint8$if5050$end;
    ir_return L0;
endf

func cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8 -> ptr__Tslice__Tpure__Tuint8
    arg #0 $cb_agg_ret: ptr__Tslice__Tpure__Tuint8;
    arg #1 s: ptr__Tslice__Tpure__Tuint8;
    local #0 count: usize;
    local #1 i: int;
    local #2 $foriter: tuple__Tint__Tusize;
    local #3 temp$receiver$4: ptr__Tslice__Tpure__Tuint8;
    ir_load L0 0;
    ir_load [L2 . 0] 0;
    ir_deref A1; (push)
    ir_load [L2 . 1] [POP() . 1];
    ir_load L1 [L2 . 0];
    ir_make_label cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$f253$cond;
    ir_cast L1; (push)
    ir_jmp_gte POP() [L2 . 1] cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$f253$end;
    ir_make_label cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$f253$body;
    ir_deref A1; (push)
    ir_deref [POP() . 0]; (push)
    ir_index POP() L1; (push)
    ir_call cb__Nroot__Nis_numeric__Auint8 POP(); (push)
    ir_jmp_neq POP() 0 cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$if250$else;
    ir_make_label cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$if250$body;
    ir_add L0 1; (push)
    ir_load L0 POP();
    ir_jmp cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$if250$end;
    ir_make_label cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$if250$else;
    ir_jmp cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$f253$end;
    ir_make_label cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$if250$end;
    ir_add L1 1; (push)
    ir_load L1 POP();
    ir_jmp cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$f253$cond;
    ir_make_label cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8$f253$end;
    ir_load L3 A0;
    ir_deref L3; (push)
    ir_deref A1; (push)
    ir_add [POP() . 0] L0; (push)
    ir_load [POP() . 0] POP();
    ir_deref L3; (push)
    ir_deref A1; (push)
    ir_sub [POP() . 1] L0; (push)
    ir_load [POP() . 1] POP();
    ir_return A0;
endf

func cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint -> ptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool
    arg #0 $cb_agg_ret: ptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool;
    arg #1 s: ptr__Tslice__Tpure__Tuint8;
    arg #2 radix: int;
    local #0 value: int;
    local #1 count: usize;
    local #2 i: int;
    local #3 $foriter: tuple__Tint__Tusize;
    local #4 temp$receiver$5: ptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool;
    local #5 temp$receiver$6: ptr__Tslice__Tpure__Tuint8;
    ir_load L0 0;
    ir_load L1 0;
    ir_load [L3 . 0] 0;
    ir_deref A1; (push)
    ir_load [L3 . 1] [POP() . 1];
    ir_load L2 [L3 . 0];
    ir_make_label cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$f351$cond;
    ir_cast L2; (push)
    ir_jmp_gte POP() [L3 . 1] cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$f351$end;
    ir_make_label cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$f351$body;
    ir_deref A1; (push)
    ir_deref [POP() . 0]; (push)
    ir_index POP() L2; (push)
    ir_call cb__Nroot__Nis_numeric__Auint8 POP(); (push)
    ir_jmp_eq POP() 0 cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$if348$else;
    ir_make_label cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$if348$body;
    ir_mul L0 A2; (push)
    ir_deref A1; (push)
    ir_deref [POP() . 0]; (push)
    ir_index POP() L2; (push)
    ir_sub POP() #48; (push)
    ir_cast POP(); (push)
    ir_add POP() POP(); (push)
    ir_load L0 POP();
    ir_add L1 1; (push)
    ir_load L1 POP();
    ir_jmp cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$if348$end;
    ir_make_label cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$if348$else;
    ir_jmp cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$f351$end;
    ir_make_label cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$if348$end;
    ir_add L2 1; (push)
    ir_load L2 POP();
    ir_jmp cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$f351$cond;
    ir_make_label cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint$f351$end;
    ir_load L4 A0;
    ir_deref L4; (push)
    ir_load [POP() . 0] L0;
    ir_deref L4; (push)
    ir_load_ptr L5 [POP() . 1];
    ir_deref L5; (push)
    ir_deref A1; (push)
    ir_add [POP() . 0] L1; (push)
    ir_load [POP() . 0] POP();
    ir_deref L5; (push)
    ir_deref A1; (push)
    ir_sub [POP() . 1] L1; (push)
    ir_load [POP() . 1] POP();
    ir_deref L4; (push)
    ir_cmp_gt L1 0; (push)
    ir_load [POP() . 2] POP();
    ir_return A0;
endf

func cb__Nroot__Nmain -> void
    local #0 buf: slice__Tpure__Tuint8;
    local #1 numbercount: int;
    local #2 inccount: int;
    local #3 suminccount: int;
    local #4 val: tuple__Tusize__Tusize__Tusize__Tusize;
    local #5 values: tuple__Tusize__Tusize__Tbool__Tbool;
    local #6 offs3: uintptr;
    local #7 offs4: uintptr;
    local #8 helloworld: slice__Tpure__Tuint8;
    local #9 stat: Stat;
    local #10 input: slice__Tuint8;
    local #11 $cbT0: tuple__Tslice__Tint__Terror;
    local #12 numbers: slice__Tint;
    local #13 err: error;
    local #14 $cbT1: tuple__Tslice__Tint__Terror;
    local #15 sums: slice__Tint;
    local #16 $cbT6: tuple__Tfile_handle__Terror;
    local #17 fd: file_handle;
    local #18 $cbT11: slice__Tpure__Tuint8;
    local #19 $cbT13: slice__Tpure__Tuint8;
    local #20 $cbT15: slice__Tuint8;
    local #21 $cbT16: slice__Tuint8;
    local #22 $cbT17: slice__Tpure__Tuint8;
    local #23 $cbT18: slice__Tint;
    local #24 $cbT19: slice__Tpure__Tuint8;
    local #25 $cbT20: slice__Tint;
    local #26 $cbT23: slice__Tpure__Tuint8;
    local #27 $cbT24: slice__Tpure__Tuint8;
    local #28 $cbT25: slice__Tpure__Tuint8;
    local #29 $cbT26: slice__Tpure__Tuint8;
    local #30 $cbT27: slice__Tpure__Tuint8;
    local #31 $cbT12: slice__Tpure__Tuint8;
    local #32 $cbT14: slice__Tpure__Tuint8;
    local #33 $cbT22: slice__Tpure__Tuint8;
    local #34 $cbT21: slice__Tpure__Tuint8;
    local #35 ok: bool;
    local #36 nbuf: slice__Tpure__Tuint8;
    local #37 n: int;
    local #38 $cbT2: tuple__Tint__Tslice__Tpure__Tuint8__Tbool;
    local #39 i: int;
    local #40 $foriter: tuple__Tint__Tint;
    local #41 i: int;
    local #42 $foriter: tuple__Tint__Tint;
    local #43 i: int;
    local #44 $foriter: tuple__Tint__Tint;
    local #45 $cbT28: slice__Tpure__Tuint8;
    local #46 $cbT29: slice__Tpure__Tuint8;
    local #47 temp$receiver$7: tuple__Tusize__Tusize__Tusize__Tusize;
    ir_store L9 0 0 48;
    ir_load_addr STR0; (push)
    ir_load [L18 . 0] POP();
    ir_load [L18 . 1] 9;
    ir_load_addr L18; (push)
    ir_load_addr L9; (push)
    ir_call cb__Nstd__Nsystem__Nstat__Aptr__Tslice__Tpure__Tuint8__Aptr__TStat POP() POP(); (push)
    ir_load L0 POP();
    ir_jmp_eq L13 0 cb__Nroot__Nmain$if411$else;
    ir_make_label cb__Nroot__Nmain$if411$body;
    ir_load_addr STR1; (push)
    ir_load [L31 . 0] POP();
    ir_load [L31 . 1] 10;
    ir_load_addr L31; (push)
    ir_call cb__Nstd__Nio__Nprintln__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_call cb__Nstd__Nsystem__Nexit__Aint 1;
    ir_make_label cb__Nroot__Nmain$if411$else;
    ir_load_addr STR0; (push)
    ir_load [L19 . 0] POP();
    ir_load [L19 . 1] 9;
    ir_load_addr L16; (push)
    ir_load_addr L19; (push)
    ir_call cb__Nstd__Nsystem__Nopen__Aptr__Ttuple__Tfile_handle__Terror__Aptr__Tslice__Tpure__Tuint8__Aopen_flags__Aint POP() POP() 4 0;
    ir_load L17 [L16 . 0];
    ir_load L13 [L16 . 1];
    ir_jmp_eq L13 0 cb__Nroot__Nmain$if438$else;
    ir_make_label cb__Nroot__Nmain$if438$body;
    ir_load_addr STR2; (push)
    ir_load [L32 . 0] POP();
    ir_load [L32 . 1] 10;
    ir_load_addr L32; (push)
    ir_call cb__Nstd__Nio__Nprintln__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_call cb__Nstd__Nsystem__Nexit__Aint 1;
    ir_make_label cb__Nroot__Nmain$if438$else;
    ir_load_addr L10; (push)
    ir_call cb__Nroot__Nalloc_string__Aptr__Tslice__Tuint8__Ausize POP() [L9 . 0];
    ir_copy L21 L10 16;
    ir_load_addr L21; (push)
    ir_call cb__Nstd__Nsystem__Nread__Afile_handle__Aptr__Tslice__Tuint8 L17 POP(); (push)
    ir_load [L10 . 1] POP();
    ir_load [L0 . 0] [L10 . 0];
    ir_load [L0 . 1] [L10 . 1];
    ir_load_addr L11; (push)
    ir_copy L22 L0 16;
    ir_load_addr L22; (push)
    ir_call cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8 POP(); (push)
    ir_call cb__Nroot__Nalloc_int_slice__Aptr__Ttuple__Tslice__Tint__Terror__Ausize POP() POP();
    ir_copy L12 [L11 . 0] 16;
    ir_load L13 [L11 . 1];
    ir_jmp_eq L13 0 cb__Nroot__Nmain$if509$else;
    ir_make_label cb__Nroot__Nmain$if509$body;
    ir_call cb__Nstd__Nsystem__Nexit__Aint 1;
    ir_make_label cb__Nroot__Nmain$if509$else;
    ir_load_addr L14; (push)
    ir_copy L24 L0 16;
    ir_load_addr L24; (push)
    ir_call cb__Nroot__Ncount_lines__Aptr__Tslice__Tpure__Tuint8 POP(); (push)
    ir_call cb__Nroot__Nalloc_int_slice__Aptr__Ttuple__Tslice__Tint__Terror__Ausize POP() POP();
    ir_copy L15 [L14 . 0] 16;
    ir_load L13 [L14 . 1];
    ir_jmp_eq L13 0 cb__Nroot__Nmain$if538$else;
    ir_make_label cb__Nroot__Nmain$if538$body;
    ir_call cb__Nstd__Nsystem__Nexit__Aint 1;
    ir_make_label cb__Nroot__Nmain$if538$else;
    ir_load L1 0;
    ir_make_label cb__Nroot__Nmain$w597$cond;
    ir_jmp_lte [L0 . 1] 0 cb__Nroot__Nmain$w597$end;
    ir_make_label cb__Nroot__Nmain$w597$body;
    ir_copy L34 L0 16;
    ir_load_addr L0; (push)
    ir_load_addr L34; (push)
    ir_call cb__Nroot__Ntrim_left_non_numeric__Aptr__Tslice__Tpure__Tuint8__Aptr__Tslice__Tpure__Tuint8 POP() POP();
    ir_copy L33 L0 16;
    ir_load_addr L38; (push)
    ir_load_addr L33; (push)
    ir_call cb__Nroot__Nparse_int__Aptr__Ttuple__Tint__Tslice__Tpure__Tuint8__Tbool__Aptr__Tslice__Tpure__Tuint8__Aint POP() POP() 10;
    ir_load L37 [L38 . 0];
    ir_copy L36 [L38 . 1] 16;
    ir_load L35 [L38 . 2];
    ir_copy L0 L36 16;
    ir_jmp_eq L35 0 cb__Nroot__Nmain$if594$else;
    ir_make_label cb__Nroot__Nmain$if594$body;
    ir_deref [L12 . 0]; (push)
    ir_index POP() L1; (push)
    ir_load POP() L37;
    ir_add L1 1; (push)
    ir_load L1 POP();
    ir_jmp cb__Nroot__Nmain$if594$end;
    ir_make_label cb__Nroot__Nmain$if594$else;
    ir_jmp cb__Nroot__Nmain$w597$end;
    ir_make_label cb__Nroot__Nmain$if594$end;
    ir_jmp cb__Nroot__Nmain$w597$cond;
    ir_make_label cb__Nroot__Nmain$w597$end;
    ir_load L2 0;
    ir_load L3 0;
    ir_load [L40 . 0] 1;
    ir_load [L40 . 1] L1;
    ir_load L39 [L40 . 0];
    ir_make_label cb__Nroot__Nmain$f631$cond;
    ir_jmp_gte L39 [L40 . 1] cb__Nroot__Nmain$f631$end;
    ir_make_label cb__Nroot__Nmain$f631$body;
    ir_deref [L12 . 0]; (push)
    ir_index POP() L39; (push)
    ir_deref [L12 . 0]; (push)
    ir_sub L39 1; (push)
    ir_index POP() POP(); (push)
    ir_jmp_lte POP() POP() cb__Nroot__Nmain$if628$else;
    ir_make_label cb__Nroot__Nmain$if628$body;
    ir_add L2 1; (push)
    ir_load L2 POP();
    ir_make_label cb__Nroot__Nmain$if628$else;
    ir_add L39 1; (push)
    ir_load L39 POP();
    ir_jmp cb__Nroot__Nmain$f631$cond;
    ir_make_label cb__Nroot__Nmain$f631$end;
    ir_load_addr STR3; (push)
    ir_load [L26 . 0] POP();
    ir_load [L26 . 1] 0;
    ir_load_addr L26; (push)
    ir_call cb__Nstd__Nio__Nprintln__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_load [L42 . 0] 0;
    ir_load [L42 . 1] L1;
    ir_load L41 [L42 . 0];
    ir_make_label cb__Nroot__Nmain$f673$cond;
    ir_jmp_gte L41 [L42 . 1] cb__Nroot__Nmain$f673$end;
    ir_make_label cb__Nroot__Nmain$f673$body;
    ir_sub L1 2; (push)
    ir_jmp_gte L41 POP() cb__Nroot__Nmain$if670$else;
    ir_make_label cb__Nroot__Nmain$if670$body;
    ir_deref [L15 . 0]; (push)
    ir_index POP() L41; (push)
    ir_deref [L12 . 0]; (push)
    ir_index POP() L41; (push)
    ir_deref [L12 . 0]; (push)
    ir_add L41 1; (push)
    ir_index POP() POP(); (push)
    ir_add POP() POP(); (push)
    ir_deref [L12 . 0]; (push)
    ir_add L41 2; (push)
    ir_index POP() POP(); (push)
    ir_add POP() POP(); (push)
    ir_load POP() POP();
    ir_make_label cb__Nroot__Nmain$if670$else;
    ir_add L41 1; (push)
    ir_load L41 POP();
    ir_jmp cb__Nroot__Nmain$f673$cond;
    ir_make_label cb__Nroot__Nmain$f673$end;
    ir_load [L44 . 0] 1;
    ir_load [L44 . 1] L1;
    ir_load L43 [L44 . 0];
    ir_make_label cb__Nroot__Nmain$f698$cond;
    ir_jmp_gte L43 [L44 . 1] cb__Nroot__Nmain$f698$end;
    ir_make_label cb__Nroot__Nmain$f698$body;
    ir_deref [L15 . 0]; (push)
    ir_index POP() L43; (push)
    ir_deref [L15 . 0]; (push)
    ir_sub L43 1; (push)
    ir_index POP() POP(); (push)
    ir_jmp_lte POP() POP() cb__Nroot__Nmain$if695$else;
    ir_make_label cb__Nroot__Nmain$if695$body;
    ir_add L3 1; (push)
    ir_load L3 POP();
    ir_make_label cb__Nroot__Nmain$if695$else;
    ir_add L43 1; (push)
    ir_load L43 POP();
    ir_jmp cb__Nroot__Nmain$f698$cond;
    ir_make_label cb__Nroot__Nmain$f698$end;
    ir_load_addr STR4; (push)
    ir_load [L27 . 0] POP();
    ir_load [L27 . 1] 16;
    ir_load_addr L27; (push)
    ir_call cb__Nstd__Nio__Nprint__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_call cb__Nstd__Nio__Nprint__Aint L2;
    ir_load_addr STR3; (push)
    ir_load [L28 . 0] POP();
    ir_load [L28 . 1] 0;
    ir_load_addr L28; (push)
    ir_call cb__Nstd__Nio__Nprintln__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_load_addr STR5; (push)
    ir_load [L29 . 0] POP();
    ir_load [L29 . 1] 20;
    ir_load_addr L29; (push)
    ir_call cb__Nstd__Nio__Nprint__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_call cb__Nstd__Nio__Nprint__Aint L3;
    ir_load_addr STR3; (push)
    ir_load [L30 . 0] POP();
    ir_load [L30 . 1] 0;
    ir_load_addr L30; (push)
    ir_call cb__Nstd__Nio__Nprintln__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_load_addr STR6; (push)
    ir_load [L8 . 0] POP();
    ir_load [L8 . 1] 11;
    ir_store L4 0 0 32;
    ir_load [L47 . 0] 0;
    ir_load [L47 . 1] 0;
    ir_load [L47 . 2] 0;
    ir_load [L47 . 3] 0;
    ir_jmp_neq L4 L47 cb__Nroot__Nmain$if781$else;
    ir_make_label cb__Nroot__Nmain$if781$body;
    ir_load_addr STR7; (push)
    ir_load [L45 . 0] POP();
    ir_load [L45 . 1] 5;
    ir_load_addr L45; (push)
    ir_call cb__Nstd__Nio__Nprintln__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_jmp cb__Nroot__Nmain$if781$end;
    ir_make_label cb__Nroot__Nmain$if781$else;
    ir_load_addr STR8; (push)
    ir_load [L46 . 0] POP();
    ir_load [L46 . 1] 9;
    ir_load_addr L46; (push)
    ir_call cb__Nstd__Nio__Nprintln__Aptr__Tslice__Tpure__Tuint8 POP();
    ir_make_label cb__Nroot__Nmain$if781$end;
    ir_store L5 0 0 32;
    ir_load_addr [L5 . 2]; (push)
    ir_load L6 POP();
    ir_load_addr [L5 . 3]; (push)
    ir_load L7 POP();
    ir_call cb__Nstd__Nio__Nprintln__Aint 32;
    ir_sub L7 L6; (push)
    ir_call cb__Nstd__Nio__Nprintln__Ausize POP();
    ir_copy L25 L15 16;
    ir_load_addr L25; (push)
    ir_call cb__Nroot__Nfree__Aptr__Tslice__Tint POP();
    ir_copy L23 L12 16;
    ir_load_addr L23; (push)
    ir_call cb__Nroot__Nfree__Aptr__Tslice__Tint POP();
    ir_copy L20 L10 16;
    ir_load_addr L20; (push)
    ir_call cb__Nroot__Nfree__Aptr__Tslice__Tuint8 POP();
    ir_call cb__Nstd__Nsystem__Nclose__Afile_handle L17; (push)
    ir_noop POP();
endf

func cb__Nroot__Nfree__Aptr__Tslice__Tuint8 -> void
    arg #0 s: ptr__Tslice__Tuint8;
    ir_deref A0; (push)
    ir_call cb__Nstd__Nmem__Nfree__Aptr__Topaque [POP() . 0];
endf

func cb__Nroot__Nfree__Aptr__Tslice__Tint -> void
    arg #0 s: ptr__Tslice__Tint;
    ir_deref A0; (push)
    ir_call cb__Nstd__Nmem__Nfree__Aptr__Topaque [POP() . 0];
endf

